# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(Date:yy)$(DayOfYear)$(Rev:rrrr)

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
    
      subscription: d079a55f-f2f8-4eaa-9a72-f0c00fce0855
      resourceGroup: resourcegroup-tfnew
      storageAccount: tfstraccunt1
      container: tfstate
      tfstateFile: terraform.tfstate
      anyTfChanges: false
stages:
  - stage: build
    jobs:
      - job: InitializeTerraform
        displayName: Initailize
        steps:
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: 'latest'
        - task: TerraformCLI@0
         
          inputs:
             
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
            backendServiceArm: '$(subscription)'
            backendAzureRmResourceGroupName: '$(resourceGroup)'
            backendAzureRmStorageAccountName: '$(storageAccount)'
            backendAzureRmContainerName: '$(container)'
            backendAzureRmKey: '$(tfstateFile)'
            allowTelemetryCollection: true
             
        
        - task: TerraformCLI@0
          inputs:
            command: 'validate'
            allowTelemetryCollection: true
        
        - task: TerraformCLI@0
          inputs:
            command: 'show'
            allowTelemetryCollection: true
        
        - task: TerraformCLI@0
          inputs:
            command: 'apply'
            allowTelemetryCollection: true
        

         
     

      

      

             
         